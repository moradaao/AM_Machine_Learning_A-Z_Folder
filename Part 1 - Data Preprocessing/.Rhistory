install.packages(c("BH", "bindr", "bindrcpp", "cluster", "digest", "dplyr", "foreign", "knitr", "MASS", "nlme", "pillar", "plogr", "R.oo", "Rcpp", "rJava", "rlang", "rmarkdown", "rpart", "stringi", "stringr", "survival", "utf8", "viridisLite", "XLConnect", "XLConnectJars", "yaml"))
# Importing the dataset
dataset = read.csv('Data.csv')
function (file, header = TRUE, sep = ",", quote = "\"", dec = ".",
fill = TRUE, comment.char = "", ...)
dataset = read.csv('Data.csv')
setwd("~/GitHub/AM_Machine_Learning_A-Z_Folder/Part 1 - Data Preprocessing")
# Importing the dataset
dataset = read.csv('Data.csv')
#Taking care of missing data
dataset$Age = ifelse(is.na(dataset$Age),
)
#Taking care of missing data
dataset$Age = ifelse(is.na(dataset$Age),
)
#Taking care of missing data
dataset$Age = ifelse(is.na(dataset$Age), ave(dataset$Age), FUN = function(x) mean(x, na.rm = TRUE)),
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
#Taking care of missing data
dataset$Age = ifelse(is.na(dataset$Age), ave(dataset$Age), FUN = function(x) mean(x, na.rm = TRUE)),
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
#Taking care of missing data
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age), FUN = function(x) mean(x, na.rm = TRUE)), dataset$Age)
#Taking care of missing data
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age), FUN = function(x) mean(x, na.rm = TRUE)),dataset$Age)
#Taking care of missing data
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age), FUN = function(x) mean(x, na.rm = TRUE)),dataset$Age)
#Taking care of missing data
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age), FUN = function(x) mean(x, na.rm = TRUE)),dataset$Age)
#Taking care of missing data
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age), FUN = function(x) mean(x, na.rm = TRUE)),dataset$Age)
#Taking care of missing data
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
dataset
